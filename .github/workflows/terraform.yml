name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check:
    name: Check Configuration
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
        
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
            
      - name: Terraform fmt
        id: fmt
        continue-on-error: true
        run: |
            format_output=$(terraform fmt -check)
            if [ $? -ne 0]; 
            then
              # Format check failed because there are 
              echo "# Format check failed on the following files:" >> $GITHUB_STEP_SUMMARY
              for i in ${format_output};
              do
                echo "- ${i}" >> $GITHUB_STEP_SUMMARY
              done
            fi

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

  plan:
    needs: [check]
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: plan

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.6

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -input=false -no-color -out=tfplan

    - name: Display the plan summary
      id: display
      run: |
        if terraform show -no-color tfplan | grep "No changes. Your infrastructure matches the configuration."; 
        then 
          echo "# No changes."  >> $GITHUB_STEP_SUMMARY
          echo "Your infrastructure matches the configuration." >> $GITHUB_STEP_SUMMARY
          echo "Terraform has compared your real infrastructure against your configuration and found no differences, so no changes are needed." >> $GITHUB_STEP_SUMMARY
        else 
          echo '# Terraform will perform the following actions:' >> $GITHUB_STEP_SUMMARY
          echo '| Action | Resource |' >> $GITHUB_STEP_SUMMARY
          echo '|----------|---------|' >> $GITHUB_STEP_SUMMARY
          terraform show -no-color tfplan \
            | grep -v '::debug::stdout:' \
            | grep 'will be' | awk '{print "|" $5 "|" $2 "|"}' \
            | sed -e 's/created/:white_check_mark: create/' -e 's/destroyed/:bangbang: destroy/' -e 's/replaced/:recycle: replace/' >> $GITHUB_STEP_SUMMARY \
          && echo -n '# '  >> $GITHUB_STEP_SUMMARY
          terraform show -no-color tfplan | grep -v '::debug::stdout:' | grep 'Plan:'  >> $GITHUB_STEP_SUMMARY
        fi

  apply:
    needs: [plan]
    if: github.ref == 'refs/heads/main'
    name: Terraform Apply
    runs-on: ubuntu-latest
    environment: apply

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
          
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.6

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
